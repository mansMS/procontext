{"version":3,"sources":["reducers/photographersData.js","reducers/appData.js","components/photographersList/index.js","components/photographersList/PhotographersList.js","components/spinner/index.js","components/spinner/Spinner.js","containers/PhotographersContainer.js","actions/index.js","services/photographersDataService.js","services/sourceURLs.js","reducers/albumsData.js","components/albumList/index.js","components/albumList/AlbumsList.js","containers/AlbumsContainer.js","services/albumsDataService.js","reducers/imagesData.js","components/imageList/index.js","components/imageList/ImageList.js","containers/ImagesContainer.js","services/imagesDataService.js","components/app/index.js","components/app/App.js","reducers/index.js","store.js","index.js"],"names":["initialState","photographersData","photographersLoading","photographersError","userId","albumId","PhotographersList","photographerClickHandler","className","map","photographer","key","id","onClick","join","name","Spinner","PhotographersContainer","props","bind","this","setPhotographersList","setShowAlbum","length","Component","connect","appData","dispatch","type","a","async","fetch","response","ok","Error","status","json","console","error","getPhotographersList","then","payload","catch","photographersDataError","message","showAlbums","albumsData","albumsLoading","albumsError","AlbumsList","albumClickHandler","album","title","AlbumsContainer","state","setState","setAlbumsList","setShowImages","getAlbumsList","albumsDataError","showImages","imagesData","imagesLoading","imagesError","ImageList","image","src","thumbnailUrl","alt","ImagesContainer","setImagesList","imagesId","getImageListt","imagesDataError","App","combineReducers","action","store","createStore","reducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"kYAGMA,EAAe,CACnBC,kBAAmB,GACnBC,sBAAsB,EACtBC,mBAAoB,MCJhBH,EAAe,CACnBI,OAAQ,KACRC,QAAS,MCFIC,G,MCCW,SAAC,GAA6D,IAA3DL,EAA0D,EAA1DA,kBAAmBM,EAAuC,EAAvCA,yBAA0BH,EAAa,EAAbA,OAExE,OACE,6BAASI,UAAU,qBACjB,wBAAIA,UAAU,yBACXP,EAAkBQ,KAAI,SAAAC,GAAY,OACjC,wBACEC,IAAKD,EAAaE,GAClBC,QAAS,kBAAMN,EAAyBG,EAAaE,KACrDJ,UACEE,EAAaE,KAAOR,EAChB,CAAC,mBAAoB,cAAcU,KAAK,KACxC,oBAGLJ,EAAaK,aChBXC,G,MCCC,WACd,OACE,yBAAKR,UAAU,WACb,yBAAKA,UAAU,mBACb,8BACA,8BACA,8BACA,8BACA,8BACA,kCCLFS,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDX,yBAA2B,EAAKA,yBAAyBY,KAA9B,gBAFf,E,iFAMjBC,KAAKF,MAAMG,yB,+CAGYT,GACvBQ,KAAKF,MAAMI,aAAaV,K,+BAIxB,OAAIQ,KAAKF,MAAMf,mBAA2B,2BAAIiB,KAAKF,MAAMf,oBACrDiB,KAAKF,MAAMhB,qBAA6B,kBAAC,EAAD,MACvCkB,KAAKF,MAAMjB,kBAAkBsB,OAGhC,kBAAC,EAAD,CACEtB,kBAAmBmB,KAAKF,MAAMjB,kBAC9BM,yBAA0Ba,KAAKb,yBAC/BH,OAAQgB,KAAKF,MAAMd,SAN0B,S,GAjBhBoB,aAoCtBC,eAPS,SAAC,GAGlB,IAAD,IAFJxB,kBAGA,MAAO,CAAEA,kBADL,EAFiBA,kBAGOC,qBADxB,EAFoCA,qBAGUC,mBAD9C,EAF0DA,mBAGQC,OADlE,EADJsB,QAAWtB,UAK2B,CAAEiB,qBNRN,kBAAM,SAAAM,GACxCA,EOnCO,CACLC,KAAM,qCCA0B,0BAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAETE,MCJK,+CDEI,WAE1BC,EAF0B,QAGlBC,GAHkB,sBAIxB,IAAIC,MAAJ,gGAA6BF,EAASG,SAJd,0BAAAN,EAAA,MAMjBG,EAASI,QANQ,0GAShCC,QAAQC,MAAM,wCAAd,MATgC,kBAUxB,4GAVwB,yDRmClCC,GACGC,MAAK,SAAAR,GAAQ,OAAIL,EO/Bb,CACLC,KAAM,mCACNa,QP6BmDT,OAClDU,OAAM,SAAAJ,GAAK,OAAIX,EO1BW,SAAAW,GAC7B,MAAO,CACLV,KAAM,mCACNa,QAASH,GPuBgBK,CAAuBL,EAAMM,eMIMtB,aLnBpC,SAACV,GAAD,OAAQ,SAAAe,GAClCA,EMkCiB,SAAAf,GACjB,MAAO,CACLgB,KAAM,aACNa,QAAS7B,GNrCFiC,CAAWjC,OKkBPa,CAAiER,GIxC1EjB,EAAe,CACnB8C,WAAY,GACZC,eAAe,EACfC,YAAa,MCJAC,G,MCCI,SAAC,GAAgD,IAA9CH,EAA6C,EAA7CA,WAAYI,EAAiC,EAAjCA,kBAAmB7C,EAAc,EAAdA,QAEnD,OACE,6BAASG,UAAU,cACjB,wBAAIA,UAAU,kBACXsC,EAAWrC,KAAI,SAAA0C,GAAK,OACnB,wBACExC,IAAKwC,EAAMvC,GACXC,QAAS,kBAAMqC,EAAkBC,EAAMvC,KACvCJ,UACE2C,EAAMvC,KAAOP,EACT,CAAC,YAAa,cAAcS,KAAK,KACjC,aAGLqC,EAAMC,cCXbC,E,YACJ,WAAYnC,GAAQ,IAAD,8BACjB,4CAAMA,KACDgC,kBAAoB,EAAKA,kBAAkB/B,KAAvB,gBAEzB,EAAKmC,MAAQ,CACXlD,OAAQ,IALO,E,kFAUbgB,KAAKF,MAAMd,SAAWgB,KAAKkC,MAAMlD,SACnCgB,KAAKmC,SAAS,CAAEnD,OAAQgB,KAAKF,MAAMd,SACnCgB,KAAKF,MAAMsC,cAAcpC,KAAKF,MAAMd,W,wCAItBQ,GAChBQ,KAAKF,MAAMuC,cAAc7C,K,+BAIzB,OAAIQ,KAAKF,MAAM8B,YAAoB,2BAAI5B,KAAKF,MAAM8B,aAC9C5B,KAAKF,MAAM6B,cAAsB,kBAAC,EAAD,MAChC3B,KAAKF,MAAM4B,WAAWvB,OAGzB,kBAAC,EAAD,CACEuB,WAAY1B,KAAKF,MAAM4B,WACvBI,kBAAmB9B,KAAK8B,kBACxB7C,QAASe,KAAKF,MAAMb,UANkB,S,GAxBhBmB,aA4CfC,eAPS,SAAC,GAGlB,IAAD,IAFJqB,WAAcA,EAEV,EAFUA,WAAYC,EAEtB,EAFsBA,cAAeC,EAErC,EAFqCA,YAErC,IADJtB,QAEA,MAAO,CAAEoB,aAAYC,gBAAeC,cAAa5C,OAD7C,EADOA,OAE8CC,QADrD,EADeA,WAKmB,CAAEmD,cHhBb,SAAC5C,GAAD,OAAQ,SAAAe,GACnCA,EHfO,CACLC,KAAM,8BOpBmB,SAAMvB,GAAN,eAAAwB,EAAAC,OAAA,2EAAAD,EAAA,MAEFE,MAAM,GAAD,OLHP,wDKGO,OAAuB1B,KAF1B,WAEnB2B,EAFmB,QAGXC,GAHW,sBAIjB,IAAIC,MAAJ,gGAA6BF,EAASG,SAJrB,0BAAAN,EAAA,MAMVG,EAASI,QANC,0GASzBC,QAAQC,MAAM,wCAAd,MATyB,kBAUjB,4GAViB,yDJmC3BoB,CAAc9C,GACX4B,MAAK,SAAAR,GAAQ,OAAIL,EHXb,CACLC,KAAM,4BACNa,QGS4CT,OAC3CU,OAAM,SAAAJ,GAAK,OAAIX,EHNI,SAAAW,GACtB,MAAO,CACLV,KAAM,4BACNa,QAASH,GGGgBqB,CAAgBrB,EAAMM,eGYMa,cZvB5B,SAAC7C,GAAD,OAAQ,SAAAe,GACnCA,EMqCiB,SAAAf,GACjB,MAAO,CACLgB,KAAM,cACNa,QAAS7B,GNxCFgD,CAAWhD,OYsBPa,CAA2D4B,GEhDpErD,EAAe,CACnB6D,WAAY,GACZC,eAAe,EACfC,YAAa,MCJAC,G,MCCG,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,WAEnB,OACE,6BAASrD,UAAU,aAChBqD,EAAWpD,KAAI,SAAAwD,GAAK,OACnB,yBAAKtD,IAAKsD,EAAMrD,GAAIJ,UAAU,aAC5B,yBAAK0D,IAAKD,EAAME,aAAcC,IAAI,iBAAiB5D,UAAU,qBCHjE6D,E,2MACJf,MAAQ,CACNjD,QAAS,I,oFAILe,KAAKF,MAAMb,UAAYe,KAAKkC,MAAMjD,UACpCe,KAAKmC,SAAS,CAAElD,QAASe,KAAKF,MAAMb,UACpCe,KAAKF,MAAMoD,cAAclD,KAAKF,MAAMb,Y,+BAKtC,OAAIe,KAAKF,MAAM6C,YAAoB,2BAAI3C,KAAKF,MAAM6C,aAC9C3C,KAAKF,MAAM4C,cAAsB,yBAAKtD,UAAU,aAAY,kBAAC,EAAD,OAC3DY,KAAKF,MAAM2C,WAAWtC,OAEpB,kBAAC,EAAD,CAAWsC,WAAYzC,KAAKF,MAAM2C,aAFC,S,GAfhBrC,aAyBfC,eAJS,SAAC,GAAsF,IAAD,IAAnFoC,WACzB,MAAO,CAAEA,WADmG,EAArEA,WAClBC,cADuF,EAAzDA,cACfC,YADwE,EAA1CA,YACjB1D,QAD2D,EAA3BqB,QAAWrB,WAItD,CAAEiE,cHIb,SAAC1D,GAAD,OAAQ,SAAAe,GACnCA,ERIO,CACLC,KAAM,8BYvCmB,SAAM2C,GAAN,eAAA1C,EAAAC,OAAA,2EAAAD,EAAA,MAEFE,MAAM,GAAD,OVFP,wDUEO,OAAuBwC,KAF1B,WAEnBvC,EAFmB,QAGXC,GAHW,sBAIjB,IAAIC,MAAJ,gGAA6BF,EAASG,SAJrB,0BAAAN,EAAA,MAMVG,EAASI,QANC,0GASzBC,QAAQC,MAAM,wCAAd,MATyB,kBAUjB,4GAViB,yDJmC3BkC,CAAc5D,GACX4B,MAAK,SAAAR,GAAQ,OAAIL,ERQb,CACLC,KAAM,4BACNa,QQV4CT,OAC3CU,OAAM,SAAAJ,GAAK,OAAIX,ERaI,SAAAW,GACtB,MAAO,CACLV,KAAM,4BACNa,QAASH,GQhBgBmC,CAAgBnC,EAAMM,gBGRpCnB,CAA4C4C,GE7B5CK,G,MCIH,WACV,OACE,yBAAKlE,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,S,OCLSmE,cAAgB,CAAEjD,QrBClB,WAAmC,IAAlC4B,EAAiC,uDAAzBtD,EAAc4E,EAAW,uCAC/C,OAAQA,EAAOhD,MACb,IAAK,aACH,MAAO,CACLxB,OAAQwE,EAAOnC,QACfpC,QAAS,MAEb,IAAK,cACH,OAAO,eACFiD,EADL,CAEEjD,QAASuE,EAAOnC,UAEpB,QACE,OAAOa,IqBd6BR,WZG3B,WAAmC,IAAlCQ,EAAiC,uDAAzBtD,EAAc4E,EAAW,uCAC/C,OAAQA,EAAOhD,MACb,IAAK,4BACH,OAAO,eACF0B,EADL,CAEEP,eAAe,EACfC,YAAa,OAEjB,IAAK,4BACH,OAAO,eACFM,EADL,CAEER,WAAY8B,EAAOnC,QACnBM,eAAe,EACfC,YAAa,OAEjB,IAAK,4BACH,OAAO,eACFM,EADL,CAEEP,eAAe,EACfC,YAAa4B,EAAOnC,UAExB,QACE,OAAOa,IYzByCO,WPGvC,WAAmC,IAAlCP,EAAiC,uDAAzBtD,EAAc4E,EAAW,uCAC/C,OAAQA,EAAOhD,MACb,IAAK,4BACH,OAAO,eACF0B,EADL,CAEEQ,eAAe,EACfC,YAAa,OAEjB,IAAK,4BACH,OAAO,eACFT,EADL,CAEEO,WAAYe,EAAOnC,QACnBqB,eAAe,EACfC,YAAa,OAEjB,IAAK,4BACH,OAAO,eACFT,EADL,CAEEQ,eAAe,EACfC,YAAaa,EAAOnC,UAExB,QACE,OAAOa,IOzBqDrD,kBtBGnD,WAAmC,IAAlCqD,EAAiC,uDAAzBtD,EAAc4E,EAAW,uCAC/C,OAAQA,EAAOhD,MACb,IAAK,mCACH,OAAO,eACF0B,EADL,CAEEpD,sBAAsB,EACtBC,mBAAoB,OAExB,IAAK,mCACH,OAAO,eACFmD,EADL,CAEErD,kBAAmB2E,EAAOnC,QAC1BvC,sBAAsB,EACtBC,mBAAoB,OAExB,IAAK,mCACH,OAAO,eACFmD,EADL,CAEEpD,sBAAsB,EACtBC,mBAAoByE,EAAOnC,UAE/B,QACE,OAAOa,M,QuBzBEuB,EAFDC,YAAYC,EAASC,YAAgBC,MCI7CC,G,MACJ,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,QAIJM,IAASC,OAAOF,EAAKG,SAASC,eAAe,W","file":"static/js/main.eb230691.chunk.js","sourcesContent":["import { getPhotographersList } from '../services/photographersDataService';\r\nimport { photographersDataRequested, photographersDataLoaded, photographersDataError } from '../actions';\r\n\r\nconst initialState = {\r\n  photographersData: [],\r\n  photographersLoading: false,\r\n  photographersError: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_PHOTOGRAPHERS_DATA_REQUEST':\r\n      return {\r\n        ...state,\r\n        photographersLoading: true,\r\n        photographersError: null\r\n      }\r\n    case 'FETCH_PHOTOGRAPHERS_DATA_SUCCESS':\r\n      return {\r\n        ...state,\r\n        photographersData: action.payload,\r\n        photographersLoading: false,\r\n        photographersError: null\r\n      }\r\n    case 'FETCH_PHOTOGRAPHERS_DATA_FAILURE':\r\n      return {\r\n        ...state,\r\n        photographersLoading: false,\r\n        photographersError: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setPhotographersList = () => dispatch => {\r\n  dispatch(photographersDataRequested());\r\n  getPhotographersList()\r\n    .then(response => dispatch(photographersDataLoaded(response)))\r\n    .catch(error => dispatch(photographersDataError(error.message)))\r\n}","import { showAlbums, showImages } from '../actions';\r\n\r\nconst initialState = {\r\n  userId: null,\r\n  albumId: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SHOW_ALBUM':\r\n      return {\r\n        userId: action.payload,\r\n        albumId: null\r\n      }\r\n    case 'SHOW_IMAGES':\r\n      return {\r\n        ...state,\r\n        albumId: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setShowAlbum = (id) => dispatch => {\r\n  dispatch(showAlbums(id));\r\n}\r\n\r\nexport const setShowImages = (id) => dispatch => {\r\n  dispatch(showImages(id));\r\n}","import PhotographersList from './PhotographersList';\r\n\r\nexport default PhotographersList;","import React from 'react';\r\nimport './PhotographersList.scss';\r\n\r\nconst PhotographersList = ({ photographersData, photographerClickHandler, userId }) => {\r\n\r\n  return (\r\n    <section className=\"PhotographersList\">\r\n      <ul className=\"PhotographersItemList\">\r\n        {photographersData.map(photographer => (\r\n          <li\r\n            key={photographer.id}\r\n            onClick={() => photographerClickHandler(photographer.id)}\r\n            className={\r\n              photographer.id === userId\r\n                ? [\"PhotographerItem\", \"activeItem\"].join(' ')\r\n                : \"PhotographerItem\"\r\n            }\r\n          >\r\n            {photographer.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PhotographersList;","import Spinner from './Spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './Spinner.scss';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"Spinner\">\r\n      <div className=\"SpinnerElements\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setPhotographersList } from '../reducers/photographersData';\r\nimport { setShowAlbum } from '../reducers/appData';\r\nimport PhotographersList from '../components/photographersList';\r\nimport Spinner from '../components/spinner';\r\n\r\nclass PhotographersContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.photographerClickHandler = this.photographerClickHandler.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setPhotographersList();\r\n  }\r\n\r\n  photographerClickHandler(id) {\r\n    this.props.setShowAlbum(id)\r\n  }\r\n\r\n  render() {\r\n    if (this.props.photographersError) return <p>{this.props.photographersError}</p>\r\n    if (this.props.photographersLoading) return <Spinner />\r\n    if (!this.props.photographersData.length) return null\r\n\r\n    return (\r\n      <PhotographersList\r\n        photographersData={this.props.photographersData}\r\n        photographerClickHandler={this.photographerClickHandler}\r\n        userId={this.props.userId}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  photographersData: { photographersData, photographersLoading, photographersError },\r\n  appData: { userId }\r\n}) => {\r\n  return { photographersData, photographersLoading, photographersError, userId }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setPhotographersList, setShowAlbum })(PhotographersContainer);","const photographersDataRequested = () => {\r\n  return {\r\n    type: 'FETCH_PHOTOGRAPHERS_DATA_REQUEST'\r\n  }\r\n}\r\n\r\nconst photographersDataLoaded = photographersData => {\r\n  return {\r\n    type: 'FETCH_PHOTOGRAPHERS_DATA_SUCCESS',\r\n    payload: photographersData\r\n  }\r\n}\r\n\r\nconst photographersDataError = error => {\r\n  return {\r\n    type: 'FETCH_PHOTOGRAPHERS_DATA_FAILURE',\r\n    payload: error\r\n  }\r\n}\r\n\r\nconst albumsDataRequested = () => {\r\n  return {\r\n    type: 'FETCH_ALBUMS_DATA_REQUEST'\r\n  }\r\n}\r\n\r\nconst albumsDataLoaded = albumsData => {\r\n  return {\r\n    type: 'FETCH_ALBUMS_DATA_SUCCESS',\r\n    payload: albumsData\r\n  }\r\n}\r\n\r\nconst albumsDataError = error => {\r\n  return {\r\n    type: 'FETCH_ALBUMS_DATA_FAILURE',\r\n    payload: error\r\n  }\r\n}\r\nconst imagesDataRequested = () => {\r\n  return {\r\n    type: 'FETCH_IMAGES_DATA_REQUEST'\r\n  }\r\n}\r\n\r\nconst imagesDataLoaded = imagesData => {\r\n  return {\r\n    type: 'FETCH_IMAGES_DATA_SUCCESS',\r\n    payload: imagesData\r\n  }\r\n}\r\n\r\nconst imagesDataError = error => {\r\n  return {\r\n    type: 'FETCH_IMAGES_DATA_FAILURE',\r\n    payload: error\r\n  }\r\n}\r\n\r\nconst showAlbums = id => {\r\n  return {\r\n    type: 'SHOW_ALBUM',\r\n    payload: id\r\n  }\r\n}\r\n\r\nconst showImages = id => {\r\n  return {\r\n    type: 'SHOW_IMAGES',\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport {\r\n  photographersDataRequested, photographersDataLoaded, photographersDataError,\r\n  albumsDataRequested, albumsDataLoaded, albumsDataError,\r\n  imagesDataRequested, imagesDataLoaded, imagesDataError,\r\n  showAlbums, showImages\r\n};","import { getPhotographersListURL } from '../services/sourceURLs';\r\n\r\nexport const getPhotographersList = async () => {\r\n  try {\r\n    const response = await fetch(getPhotographersListURL);\r\n    if (!response.ok) {\r\n      throw new Error(`Ошибка загрузки ${response.status}`)\r\n    } else {\r\n      return await response.json();\r\n    }\r\n  } catch (error) {\r\n    console.error('Ошибка:', error);\r\n    return ('Ошибка при загрузке');\r\n  }\r\n}","const getPhotographersListURL = 'https://jsonplaceholder.typicode.com/users';\r\nconst getAlbumsListURL = 'https://jsonplaceholder.typicode.com/albums/?userId=';\r\nconst getImageListtURL = 'https://jsonplaceholder.typicode.com/photos?albumId=';\r\n\r\nexport { getPhotographersListURL, getAlbumsListURL, getImageListtURL }","import { getAlbumsList } from '../services/albumsDataService';\r\nimport { albumsDataRequested, albumsDataLoaded, albumsDataError } from '../actions';\r\n\r\nconst initialState = {\r\n  albumsData: [],\r\n  albumsLoading: false,\r\n  albumsError: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_ALBUMS_DATA_REQUEST':\r\n      return {\r\n        ...state,\r\n        albumsLoading: true,\r\n        albumsError: null\r\n      }\r\n    case 'FETCH_ALBUMS_DATA_SUCCESS':\r\n      return {\r\n        ...state,\r\n        albumsData: action.payload,\r\n        albumsLoading: false,\r\n        albumsError: null\r\n      }\r\n    case 'FETCH_ALBUMS_DATA_FAILURE':\r\n      return {\r\n        ...state,\r\n        albumsLoading: false,\r\n        albumsError: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setAlbumsList = (id) => dispatch => {\r\n  dispatch(albumsDataRequested());\r\n  getAlbumsList(id)\r\n    .then(response => dispatch(albumsDataLoaded(response)))\r\n    .catch(error => dispatch(albumsDataError(error.message)))\r\n}","import AlbumsList from './AlbumsList';\r\n\r\nexport default AlbumsList;","import React from 'react';\r\nimport './AlbumsList.scss';\r\n\r\nconst AlbumsList = ({ albumsData, albumClickHandler, albumId }) => {\r\n\r\n  return (\r\n    <section className=\"AlbumsList\">\r\n      <ul className=\"AlbumsItemList\">\r\n        {albumsData.map(album => (\r\n          <li\r\n            key={album.id}\r\n            onClick={() => albumClickHandler(album.id)}\r\n            className={\r\n              album.id === albumId\r\n                ? [\"AlbumItem\", \"activeItem\"].join(' ')\r\n                : \"AlbumItem\"\r\n            }\r\n          >\r\n            {album.title}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AlbumsList;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setAlbumsList } from '../reducers/albumsData';\r\nimport { setShowImages } from '../reducers/appData';\r\nimport AlbumList from '../components/albumList';\r\nimport Spinner from '../components/spinner';\r\n\r\nclass AlbumsContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.albumClickHandler = this.albumClickHandler.bind(this);\r\n\r\n    this.state = {\r\n      userId: ''\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.userId !== this.state.userId) {\r\n      this.setState({ userId: this.props.userId })\r\n      this.props.setAlbumsList(this.props.userId);\r\n    }\r\n  }\r\n\r\n  albumClickHandler(id) {\r\n    this.props.setShowImages(id)\r\n  }\r\n\r\n  render() {\r\n    if (this.props.albumsError) return <p>{this.props.albumsError}</p>\r\n    if (this.props.albumsLoading) return <Spinner />\r\n    if (!this.props.albumsData.length) return null\r\n\r\n    return (\r\n      <AlbumList\r\n        albumsData={this.props.albumsData}\r\n        albumClickHandler={this.albumClickHandler}\r\n        albumId={this.props.albumId}\r\n      />\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  albumsData: { albumsData, albumsLoading, albumsError },\r\n  appData: { userId, albumId }\r\n}) => {\r\n  return { albumsData, albumsLoading, albumsError, userId, albumId }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setAlbumsList, setShowImages })(AlbumsContainer);","import { getAlbumsListURL } from '../services/sourceURLs';\r\n\r\nexport const getAlbumsList = async albumId => {\r\n  try {\r\n    const response = await fetch(`${getAlbumsListURL}${albumId}`);\r\n    if (!response.ok) {\r\n      throw new Error(`Ошибка загрузки ${response.status}`)\r\n    } else {\r\n      return await response.json();\r\n    }\r\n  } catch (error) {\r\n    console.error('Ошибка:', error);\r\n    return ('Ошибка при загрузке');\r\n  }\r\n}","import { getImageListt } from '../services/imagesDataService';\r\nimport { imagesDataRequested, imagesDataLoaded, imagesDataError } from '../actions';\r\n\r\nconst initialState = {\r\n  imagesData: [],\r\n  imagesLoading: false,\r\n  imagesError: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_IMAGES_DATA_REQUEST':\r\n      return {\r\n        ...state,\r\n        imagesLoading: true,\r\n        imagesError: null\r\n      }\r\n    case 'FETCH_IMAGES_DATA_SUCCESS':\r\n      return {\r\n        ...state,\r\n        imagesData: action.payload,\r\n        imagesLoading: false,\r\n        imagesError: null\r\n      }\r\n    case 'FETCH_IMAGES_DATA_FAILURE':\r\n      return {\r\n        ...state,\r\n        imagesLoading: false,\r\n        imagesError: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setImagesList = (id) => dispatch => {\r\n  dispatch(imagesDataRequested());\r\n  getImageListt(id)\r\n    .then(response => dispatch(imagesDataLoaded(response)))\r\n    .catch(error => dispatch(imagesDataError(error.message)))\r\n}","import ImageList from './ImageList';\r\n\r\nexport default ImageList;","import React from 'react';\r\nimport './ImageList.scss';\r\n\r\nconst ImageList = ({ imagesData }) => {\r\n\r\n  return (\r\n    <section className=\"ImageList\">\r\n      {imagesData.map(image => (\r\n        <div key={image.id} className=\"ItemBlock\">\r\n          <img src={image.thumbnailUrl} alt=\"thumbnailImage\" className=\"ImageItem\" />\r\n        </div>\r\n      ))}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ImageList;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setImagesList } from '../reducers/imagesData';\r\nimport ImageList from '../components/imageList';\r\nimport Spinner from '../components/spinner';\r\n\r\nclass ImagesContainer extends Component {\r\n  state = {\r\n    albumId: ''\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.albumId !== this.state.albumId) {\r\n      this.setState({ albumId: this.props.albumId })\r\n      this.props.setImagesList(this.props.albumId);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.imagesError) return <p>{this.props.imagesError}</p>\r\n    if (this.props.imagesLoading) return <div className=\"ImageList\"><Spinner /></div>\r\n    if (!this.props.imagesData.length) return null\r\n\r\n    return <ImageList imagesData={this.props.imagesData} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ imagesData: { imagesData, imagesLoading, imagesError }, appData: { albumId } }) => {\r\n  return { imagesData, imagesLoading, imagesError, albumId }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setImagesList })(ImagesContainer);","import { getImageListtURL } from '../services/sourceURLs';\r\n\r\nexport const getImageListt = async imagesId => {\r\n  try {\r\n    const response = await fetch(`${getImageListtURL}${imagesId}`);\r\n    if (!response.ok) {\r\n      throw new Error(`Ошибка загрузки ${response.status}`)\r\n    } else {\r\n      return await response.json();\r\n    }\r\n  } catch (error) {\r\n    console.error('Ошибка:', error);\r\n    return ('Ошибка при загрузке');\r\n  }\r\n}","import App from './App';\r\n\r\nexport default App;","import React from 'react';\r\nimport PhotographersContainer from '../../containers/PhotographersContainer';\r\nimport AlbumsContainer from '../../containers/AlbumsContainer';\r\nimport ImagesContainer from '../../containers/ImagesContainer';\r\nimport './App.scss';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <PhotographersContainer />\r\n      <AlbumsContainer />\r\n      <ImagesContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\nimport appData from './appData';\r\nimport albumsData from './albumsData';\r\nimport imagesData from './imagesData';\r\nimport photographersData from './photographersData';\r\n\r\nexport default combineReducers({ appData, albumsData, imagesData, photographersData })","import { createStore, applyMiddleware } from 'redux';\r\nimport reducer from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/app';\nimport store from './store';\n\nimport './index.css';\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));"],"sourceRoot":""}